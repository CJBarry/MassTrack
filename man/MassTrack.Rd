% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MassTrack.R
\name{MassTrack}
\alias{MassTrack}
\title{MassTrack}
\usage{
MassTrack(ptl = "pathline", gwnc, wtop = "wtop.nc", phi, m0 = 1,
  retain.storage = TRUE, truncate = TRUE, confined = FALSE,
  outmass = TRUE, loss = TRUE, outmass.array = FALSE,
  tlumpoutmass = FALSE, linear.decay = FALSE, react.loss = TRUE, end.t)
}
\arguments{
\item{ptl}{a data.frame, data.table or string giving the path to a data
file containing a pathline data set produced by MODPATH}

\item{gwnc}{a NetCDF of MODFLOW simulation data produced by GW.nc, or a
path to one}

\item{wtop}{a NetCDF of water height or path to one (MassTrack can
generate one if this hasn't been made)}

\item{phi}{porosity: single value, layer by layer (vector) or
distributed array}

\item{m0}{initial mass of particles: single value, vector of values or
function of time only}

\item{retain.storage}{should mass flux to storage be retained on a
pathline?}

\item{truncate}{if TRUE, once a particle is completely drained, further
trajectory information is not returned with the result}

\item{confined}{not yet implemented}

\item{outmass}{return cell referenced information about where the mass
is abstracted?}

\item{loss}{return information about where particle mass is not released}

\item{outmass.array}{logical \code{[1]};
if outmass = TRUE, then outmass.array = TRUE signals that the abstracted
 mass information should be returned in an array rather than a data.table}

\item{tlumpoutmass}{logical \code{[1]};
should the outmass array only show the spatial cell location (TRUE), or
 show during which time step the abstractions occurred as well (in which
 case the outmass array will be four-dimensional and potentially very
 large)}

\item{linear.decay}{double \code{[1]};
linear decay constant, defaults to 0 which is no decay}

\item{react.loss}{logical \code{[1]};
similar to outmass, save locational reaction loss information?}

\item{end.t}{double \code{[1]};
specify the end time of the simulation; if missing, it will be inferred
 from ptl, but the last particles to arrive at an abstraction may not be
 drained because the simulation will be assumed to have finished as soon
 as or just after they arrive}
}
\value{
A list of results:
$trace, data.table: the pathline data table with new columns for mass
 and, if \code{outmass.array = FALSE}, mass loss and reactive mass
 loss\cr
$outmass, numeric array: if \code{outmass = TRUE} and
 \code{outmass.array = TRUE}, the mass removed from the system by
 column, row and layer and, if \code{tlumpoutmass = FALSE}, time step\cr
$react.loss, numeric array: as with outmass but for reactive loss\cr
$loss, numeric \code{[Np]}: mass which is lost otherwise (e.g. particle
 wasn't released)

Only requested outputs are returned and if only traces are returned,
 then the data table is not put in a list.
}
\description{
Track particle mass along a MODPATH-5 generated pathline
}
\examples{
# MODFLOW NetCDF dataset
library("RNetCDF")
mfdata <- open.nc(system.file("masstrack_mf_demo.nc",
                              package = "MassTrack"))

# pathline file
library("data.table")
ptl <- fread(system.file("masstrack_mp_demo.ptl",
                         package = "MassTrack"), skip = 1L)

# run MassTrack
# - this will generate a new NetCDF for the water top (see wtop
#    argument)
# - a simple example in which all particles start with mass 1, and there
#    is no degradationg
mt <- MassTrack(ptl, mfdata, "MT_EXAMPLE_wtop.nc", phi = .1, end.t = 1500)

# plot results
# - plot MODFLOW model boundaries
library("Rflow")
MFimage(is.na(var.get.nc(mfdata, "Head",
                         c(NA, NA, 1L, 1L),
                         c(NA, NA, 1L, 1L))),
        gccs(mfdata), grcs(mfdata), 0:1,
        c("transparent", "grey"), asp = 1)

MFimage(var.get.nc(mfdata, "ConstantHead",
                   c(NA, NA, 1L, 1L),
                   c(NA, NA, 1L, 1L)) != 0,
        gccs(mfdata), grcs(mfdata), 0:1,
        c("transparent", "blue"), add = TRUE)

MFimage(var.get.nc(mfdata, "RiverLeakage",
                   c(NA, NA, 1L, 1L),
                   c(NA, NA, 1L, 1L)) != 0,
        gccs(mfdata), grcs(mfdata), 0:1,
        c("transparent", "green"), add = TRUE)

MFimage(var.get.nc(mfdata, "Wells",
                   c(NA, NA, 1L, 1L),
                   c(NA, NA, 1L, 1L)) != 0,
        gccs(mfdata), grcs(mfdata), 0:1,
        c("transparent", "red"), add = TRUE)

# plot pathlines
# - note that data.table subsetting often doesn't work with lines
ptl <- fread(system.file("masstrack_mp_demo.ptl",
                         package = "MassTrack"), skip = 1L)
setnames(ptl, c("ptlno", "x", "y", "z_off", "z",
                "t", "C", "R", "L", "timestep"))

for(p in unique(ptl$ptlno)) ptl[ptlno == p, lines(x, y)]

# plot particle masses
mt$traces[, points(x, y, pch = 16L, col = "darkgreen", cex = m)]

# you can save the results to file using rlist::list.save, for example
\dontrun{
  rlist::list.save(mt, "MT_EXAMPLE.rds")
}

}

